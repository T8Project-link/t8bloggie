rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.isAdmin == true;
    }

    match /posts/{postId} {
      allow read: if true;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions']))
                   || (request.auth != null && (
                     resource.data.authorId == request.auth.token.email || 
                     isAdmin()
                   ));
      allow create: if request.auth != null && 
                   request.resource.data.authorId == request.auth.token.email &&
                   !get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.isBanned;
      allow delete: if request.auth != null && (
                     resource.data.authorId == request.auth.token.email || 
                     isAdmin()
                   );
    }
    
    match /users/{userId} {
      allow read: if true;
      allow update: if request.auth != null && (
                     request.auth.token.email == userId ||
                     (isAdmin() && request.resource.data.diff(resource.data).affectedKeys().hasAny(['isAdmin', 'isBanned', 'badges']))
                   );
      allow write: if request.auth != null && request.auth.token.email == userId;
    }
    
    match /admins/{email} {
      allow read: if request.auth != null && request.auth.token.email == email;
      allow write: if false;
    }
  }
}